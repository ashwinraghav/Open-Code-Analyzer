require 'spec_helper'

describe Statistics do

  class Sample
    include Statistics
  end

  # Based on wikipedia examples - http://en.wikipedia.org/wiki/Naive_Bayes_classifier

  describe "pdf" do
    it "for weight" do
      Sample.new.probability_density_function(130, 176.25, 1.2292e+02).should be_close(5.9881e-06, 0.0000000001)
    end

    it "for height" do
      Sample.new.probability_density_function(6, 5.855, 3.5033e-02).should be_close(1.5789, 0.0001)
    end
  end

  describe "mean" do
    it "for some random values" do
      Sample.new.mean([1, 2, 3]).should == 2
    end
  end

  describe "sample variance" do
    it "for male height" do
      Sample.new.sample_variance([6, 5.92, 5.58, 5.92], 5.855).should be_close(3.5033e-02, 0.000001)
    end

    it "test" do
      values = [31, 26, 9, 10, 12, 12, 11, 10, 17, 9, 9, 10, 15, 13, 7, 5, 6, 10, 6, 11, 9, 8, 6, 24, 8, 18, 39, 14, 3, 5, 11, 13, 9, 9, 10, 8, 10, 13, 20, 12, 15, 9, 10, 17, 57, 6, 10, 9, 10, 6, 10, 10, 6, 12, 8, 5, 6, 6, 7, 10, 8, 9, 14, 11, 7, 11, 6, 9, 8, 5, 9, 8, 6, 13, 7, 8, 10, 9, 11, 7, 8, 9, 12, 10, 8, 7, 6, 11, 12, 21, 7, 13, 16, 10, 9, 7, 6, 11, 11, 11, 32, 6, 17, 17, 22, 11, 9, 9, 10, 44, 9, 9, 6, 13, 9, 24, 18, 18, 16, 5, 35, 18, 11, 6, 9, 4, 20, 14, 13, 24, 7, 10, 21, 10, 19, 21, 20, 18, 19, 13, 19, 9, 16, 15, 8, 13, 12, 11, 10, 22, 14, 11, 17, 9, 9, 16, 9, 22, 20, 38, 9, 13, 18, 21, 9, 10, 8, 6, 9, 8, 9, 9, 9, 15, 9, 10, 10, 8, 9, 9, 13, 16, 7, 11, 9, 15, 9, 27, 9, 5, 7, 17, 21, 13, 13, 9, 5, 5, 15, 9, 9, 12, 9, 11, 9, 11, 9, 6, 10, 10, 11, 16, 12, 9, 4, 18, 9, 13, 13, 9, 5, 9, 9, 15, 21, 13, 19, 5, 17, 10, 20, 15, 9, 8, 9, 11, 17, 10, 17, 17, 12, 9, 12, 12, 7, 11, 11, 14, 11, 7, 8, 16, 8, 9, 11, 9, 13, 7, 10, 6, 5, 6, 15, 9, 9, 12, 10, 6, 13, 10, 17, 11, 13, 9, 8, 10, 17, 13, 19, 9, 13, 9, 5, 9, 5, 5, 11, 5, 16, 10, 10, 6, 24, 12, 7, 9, 12, 7, 7, 17, 11, 7, 5, 20, 19, 22, 6, 19, 10, 6, 17, 11, 9, 7, 8, 12, 7, 8, 17, 9, 10, 25, 6, 10, 17, 7, 13, 10, 26, 10, 13, 5, 9, 17, 13, 9, 6, 13, 10, 12, 10, 5, 13, 9, 20, 27, 13, 10, 21, 14, 13, 7, 11, 11, 14, 9, 27, 9, 14, 6, 14, 27, 16, 16, 16, 23, 10, 16, 8, 9, 11, 6, 8, 16, 24, 11, 16, 11, 20, 7, 6, 18, 11, 13, 29, 9, 18, 14, 9, 8, 11, 10, 11, 15, 15, 11, 14, 10, 6, 9, 4, 15, 5, 19, 15, 5, 7, 6, 12, 8, 5, 13, 13, 13, 17, 10, 13, 8, 16, 9, 16, 13, 23, 14, 17, 11, 7, 6, 10, 18, 5, 11, 8, 5, 9, 9, 15, 8, 7, 18, 11, 12, 12, 11, 8, 11, 8, 6, 4, 4, 4, 9, 8, 35, 10, 9, 7, 9, 13, 9, 7, 9, 14, 15, 14, 9, 11, 9, 11, 11, 6, 13, 8, 6, 12, 17, 9, 8, 14, 5, 8, 22, 11, 14, 14, 14, 12, 7, 10, 22, 17, 9, 15, 9, 10, 13, 12, 18, 5, 15, 13, 12, 10, 13, 12, 19, 20, 6, 14, 12, 9, 9, 16, 9, 10, 5, 15, 7, 14, 23, 9, 10, 11, 19, 13, 12, 10, 18, 9, 13, 12, 10, 8, 10, 11, 9, 15, 7, 8, 7, 7, 10, 8, 14, 17, 10, 16, 14, 21, 7, 7, 10, 17, 5, 21, 27, 13, 17, 5, 13, 13, 22, 10, 10, 11, 6, 12, 5, 7, 10, 13, 22, 13, 13, 5, 8, 11, 10, 18, 34, 6, 13, 9, 17, 8, 30, 10, 6, 4, 5, 10, 18, 9, 5, 9, 19, 13, 6, 5, 10, 11, 8, 13, 12, 12]

      values = [5,5,5,4,6]

      p Sample.new.sample_variance(values, 5)

    end
  end
end